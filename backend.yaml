- name: configure backend server
  hosts: backend
  become: yes # use sudo to run tasks as root
  tasks:
    - name: disable current nodejs
      ansible.builtin.command: dnf module disable nodejs -y

    - name: enable nodejs 20
      ansible.builtin.command: dnf module enable nodejs:20 -y

    - name: install nodejs
      ansible.builtin.package:
        name: "{{ item }}"
        state: present
      loop:
        - nodejs
        - mysql

    - name: create expense user
      ansible.builtin.user:
        name: expense

    - name: create application directory
      ansible.builtin.file:
        path: /app
        state: directory # create directory if not exists
    - name: download backend application code
      ansible.builtin.get_url:
        url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
        dest: /tmp/backend.zip

    - name: unzip backend application code
      ansible.builtin.unarchive:
        src: /tmp/backend.zip
        dest: /app
        remote_src: yes # file is already on remote server so set remote_src to yes i.e it is already present on other remote server which is not under ansible control

    - name: install backend dependencies
      community.general.npm:
        path: /app

    - name: copy backend service file
      ansible.builtin.copy:
        src: backend.service # file is present in our system i.e ansible node, so need not to write remote src: yes
        dest: /etc/systemd/system/backend.service

    - name: install python libraries
      ansible.builtin.pip:
        name: PyMySQL
        executable: pip3.9

    - name: import mysql data
      community.mysql.mysql_db:
        name: all
        state: import
        login_user: root
        login_password: ExpenseApp@1
        login_host: mysql.learndevops.online
        target: /app/schema/backend.sql
